# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.8"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.8/rdme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "e1958f32673bd773f7413e1ae247ae47c40b78fbc84f4a1d684d27ef6bd796cf"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.8/rdme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "aeb0da5b940b0d196c4176a491be04dbd7bc45dd2f9ef9900f09ba4fe49e3ae6"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.8/rdme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "af17c9773e51ef6c330a764e4c90e1bf056221a434b4209f7477051659c698fa"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.8/rdme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "18cc707cae64b84708e081ec37c54b698d5960eaf5418286d6879276fcf1131b"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
