# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.3"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.3/rdme_darwin_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "56475c78e55b3576f121254fb9deceff7d936093c3a71158be634726fda325e8"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.3/rdme_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "5f3222a53f3a782a9db019962e32fd7cce7597cdb764df0fadca4532385e1966"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.3/rdme_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "d9ce2e886ff4f37e7556b809e74c15e99a342999cc3a63d1c1143ff59c84562c"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.3/rdme_linux_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "185f9d701079782881a4c5d8193f213be7dc5e9cfd92e253119e7bec78de4f74"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
