# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.2"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.2/rdme_darwin_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "639d8af14ef2b90bbe8eeba050f0286677a847e9c9d3828469b5f4d7a501c2b0"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.2/rdme_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "08542951ab8b8de6476fab83dbc4ccb00a0fa3e07a17b4e551a4986d8b66a932"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.2/rdme_linux_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "6635248853ee84a1594c9c140e2a1e9f7eb046e2a9d6d186d6a21661503c4ed3"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.2/rdme_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "ca4d67a7d916553de1609b5ad2abb94b566bc6b5cc0e2c2fb9648d74dceb3a2e"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
