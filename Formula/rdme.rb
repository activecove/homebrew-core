# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.4"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.4/rdme_darwin_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "d3501a59795fb06bf20762f9ab0f79e7638f4d134b123fe2245b3aecb6f2b89a"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.4/rdme_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "abc2992b45d2c7d4c7d81d2f1ea8fd9280702ec7c822a659187285a51897aee7"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.4/rdme_linux_x86_64.tar.gz", :using => CurlDownloadStrategy
      sha256 "5177879820e53adc1b0b27a82e4e9763195e507ed066feecf3cabfe32711a20b"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.4/rdme_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "9f96da4fabd837b9ed03177712b12d78315ff8d7bc64fc86ac1a7156be0d3004"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
