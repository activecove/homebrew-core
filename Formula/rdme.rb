# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.11"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.11/rdme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "9c39f4782adc4483c519b11047907b643c8a266f5a1190ededccf0d43e372061"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.11/rdme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "ed3fc114a052baacd466d97e243b89ceb4df362509f4e05370ae08dad35c2d50"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.11/rdme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "6202b9ef3c94877517038f0a3b85ffbb7a9f1e3f11253ccc2a8ec8ed987b3bbe"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.11/rdme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "42befcb3c9c86c22dd7884617adec3c04f6adbc54f939f921ecf908545f1f0dc"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
