# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rdme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "0.1.10"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.10/rdme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "448570560f4b6544326ed1270b04f9e2997d84be6704e7b6a6103a6f15b8ddbd"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/rdme/0.1.10/rdme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "12c098e5602925111d77855145a78ce40cdcb0115d146a83e9e2cffd2ae03918"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/rdme/0.1.10/rdme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "c218b898c80f279da4c661313e159ff839c3500381b2e4202991b0d05470b29d"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/rdme/0.1.10/rdme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "fcc34147a9b4ef8df6967947e767050e931c3d7bbd219eca9d26b7778e112e07"

      def install
        bin.install "rdme"
        (bash_completion/"rdme").write `#{bin}/rdme completion bash`
        (fish_completion/"rdme.fish").write `#{bin}/rdme completion fish`
        (zsh_completion/"_rdme").write `#{bin}/rdme completion zsh`
      end
    end
  end

  test do
    assert_match "rdme #{version}", shell_output("#{bin}/rdme version")
  end
end
