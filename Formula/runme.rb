# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "2.0.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/2.0.0/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "3c26486c1811f0dd7ece9b279217dc83e8d822b7009a4c0032149c44ac195291"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/2.0.0/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "e75a78871e781cf90e5ae61049ac53ed006f361955a7fde8f7f7063629157ad2"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/2.0.0/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "2993027c4869075e37fbbf6ae8f5c86fc30526c7ad12b41937f4be7bbd5dad37"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/2.0.0/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "0ad4dbf32056d7fb1813e917dcb60b48e41d5e9c6ea7fe2bb25fcd55d633100e"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
