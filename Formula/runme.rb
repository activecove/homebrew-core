# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "2.0.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/2.0.2/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "9db482e1de87d645ff1b8fc0c3bbba1da0506bbfee0a49f4b1b0a69cb31bc8be"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/2.0.2/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "d7d226a84b16627efa447fc99fa61d6895e572523986e6012b285e8672bd14d9"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/2.0.2/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "39f7d13679311da71205368cf177b105da497d49f7873239fff7c592d5554b49"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/2.0.2/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "1d3d217608e4713c037d105e5fb77a5f044aebcad8c18aeb6fa0a57df05795ce"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
