# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "1.7.8"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/1.7.8/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "fe3e7f753b8ec4a62f309e494c14d9bb30dbe9f53733bbab464a97273ff0c28d"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.8/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "0aeec5d68852dbc5713bacc9dbb8fb630f1e68cdfd1421146fadf78bcdfd6d48"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/1.7.8/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "21b077f730112692061db2c5fe3a3f0cdc8770837cd7d4fd1f17fe33f69e1f68"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.8/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "bc01ad8e2e3d442077709cc9d66e106ca57c40814dfc270c6f3b0a72373df33d"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
