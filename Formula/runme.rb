# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://stateful.com"
  version "1.7.1"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/1.7.1/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "c017dcde69bb56248fa2010046428a034fd3a2c9fd4dbdec72718d18facf5d64"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.1/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "97ccf6db206a2cbf828c3c5faf00b66702f7ce6c819a44a708b07f387cbffe32"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/1.7.1/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "e39fa4b398ca5338065c0aa55ea33c635bea70ff4a05d62de2511f31d299f392"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.1/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "79ef2dee05a132bc88b0e61aa3cf24da7caf983a78e4f530a1341391e69e808a"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
