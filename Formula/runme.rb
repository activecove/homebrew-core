# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "1.8.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/1.8.2/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "673031f9b6d97a720896d6b55044a34bb8edcbe76dfe434bf9a0dd00d4a3c3e9"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.8.2/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "1f7bda015715a23b112a3c195e5c20c4be871f4ec12ac014e2b8532cc5cacdc4"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/1.8.2/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "c592d6f1803cc822c22e1334a4a2c95c38635e8699e1fecab79b69a276a16665"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.8.2/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "a88fe4ec8786247d7b84e6632ca2f4169412d30de998b34291d9d30bd4722917"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
