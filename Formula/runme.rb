# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "1.7.6"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/1.7.6/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "f9cac39574f86312a251d6c871916397e50d39ce81046a3aa71a1086678b03ff"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.6/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "c50bf9c95d3c3f4df4d4cc3558383f7d963819243ba3ef40922a02cccefc339b"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/1.7.6/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "ac3aa8607c61f69f61109bc3a47e3922ee5abea2c2e9b834527b35567c740d20"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.6/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "425fa152871a114ee777bcae79d36a981685bb9b02056761816c0c740e63d23e"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
