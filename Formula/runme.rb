# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Runme < Formula
  desc "Execute code snippets directly from Markdown files."
  homepage "https://runme.dev"
  version "1.7.4"

  on_macos do
    if Hardware::CPU.arm?
      url "https://download.stateful.com/runme/1.7.4/runme_darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "cf1ce8af90034844dc2fdcfdf372d271dee284a5027f537bb88104019cb8540d"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.4/runme_darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "882ded563445b3e81006c5326b645019459138147f8d76a12a714a1eb9c79672"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://download.stateful.com/runme/1.7.4/runme_linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "80a19ea89b2928501302d0405935a20c2be5887cf405fb6d4baec5a655a18e03"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://download.stateful.com/runme/1.7.4/runme_linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "3f6e809b2ade53ab6949d7f5dd03e60025fa38e7141008e7a17fc15fd423c012"

      def install
        bin.install "runme"
        (bash_completion/"runme").write `#{bin}/runme completion bash`
        (fish_completion/"runme.fish").write `#{bin}/runme completion fish`
        (zsh_completion/"_runme").write `#{bin}/runme completion zsh`
      end
    end
  end

  test do
    assert_match "runme #{version}", shell_output("#{bin}/runme version")
  end
end
